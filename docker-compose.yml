version: '3.8'

services:
  server:
    image: ghcr.io/aet-devops25/ticketing-service/server:latest
    build:
      context: ./server
      dockerfile: Dockerfile
      cache_from:
        - ghcr.io/aet-devops25/ticketing-service/server:latest
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:postgresql://database:5432/db
      - SPRING_DATASOURCE_USERNAME=spoved
      - SPRING_DATASOURCE_PASSWORD=secret
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped

  client:
    image: ghcr.io/aet-devops25/ticketing-service/client:latest
    build:
      context: ./client/frontend
      dockerfile: Dockerfile
      args:
        VITE_SERVER_API_URL: ${VITE_SERVER_API_URL:-http://localhost:8080/api/v1}
        VITE_AUTH_API_URL: ${VITE_AUTH_API_URL:-http://localhost:8030}
        VITE_GENAI_API_URL: ${VITE_GENAI_API_URL:-http://localhost:8000}
    ports:
      - "3000:3000"
    environment:
      - VITE_SERVER_API_URL=${VITE_SERVER_API_URL:-http://localhost:8080/api/v1}
      - VITE_AUTH_API_URL=${VITE_AUTH_API_URL:-http://localhost:8030}
      - VITE_GENAI_API_URL=${VITE_GENAI_API_URL:-http://localhost:8000}
    depends_on:
      - server
    restart: unless-stopped

  database:
    image: team-spoved-db
    build:
      context: ./database
      dockerfile: Dockerfile
    environment:
      - POSTGRES_USER=spoved
      - POSTGRES_PASSWORD=secret
      - POSTGRES_DB=db
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    restart: unless-stopped

  auth:
    image: auth-service
    build:
      context: ./auth
      dockerfile: Dockerfile
    ports:
      - "8030:8030"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:postgresql://database:5432/db
      - SPRING_DATASOURCE_USERNAME=spoved
      - SPRING_DATASOURCE_PASSWORD=secret

  genai:
    image: genai-service
    build:
      context: ./genai
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - BACKEND_API_URL=http://server:8080/api/v1
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - JWT_SECRET=${JWT_SECRET}
    depends_on:
      - server
    restart: unless-stopped

volumes:
  pgdata: