version: '3.8'

services:
  server:
    image: ghcr.io/aet-devops25/ticketing-service/server:latest
    build:
      context: ./server
      dockerfile: Dockerfile
      cache_from:
        - ghcr.io/aet-devops25/ticketing-service/server:latest
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:postgresql://database:5432/db
      - SPRING_DATASOURCE_USERNAME=spOveD
      - SPRING_DATASOURCE_PASSWORD=secret
      - MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE=health,info,prometheus
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped

  client:
    image: ghcr.io/aet-devops25/ticketing-service/client:latest
    build:
      context: ./client/frontend
      dockerfile: Dockerfile
      args:
        VITE_SERVER_API_URL: ${VITE_SERVER_API_URL:-http://localhost:8080/api/v1}
        VITE_AUTH_API_URL: ${VITE_AUTH_API_URL:-http://localhost:8030}
    ports:
      - "3000:3000"
    environment:
      - VITE_SERVER_API_URL=${VITE_SERVER_API_URL:-http://localhost:8080/api/v1}
      - VITE_AUTH_API_URL=${VITE_AUTH_API_URL:-http://localhost:8030}

    depends_on:
      - server
    restart: unless-stopped

  database:
    image: team-spoved-db
    build:
      context: ./database
      dockerfile: Dockerfile
    environment:
      - POSTGRES_USER=spOveD
      - POSTGRES_PASSWORD=secret
      - POSTGRES_DB=db
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    restart: unless-stopped

  auth:
    image: auth-service
    build:
      context: ./auth
      dockerfile: Dockerfile
    ports:
      - "8030:8030"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:postgresql://database:5432/db
      - SPRING_DATASOURCE_USERNAME=spOveD
      - SPRING_DATASOURCE_PASSWORD=secret
      - MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE=health,info,prometheus

  prometheus:
    image: prom/prometheus:v2.52.0
    container_name: prometheus
    ports: 
      - "9090:9090"
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yaml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    restart: unless-stopped

volumes:
  pgdata:
  prometheus_data: