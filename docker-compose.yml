services:

  traefik:
    image: traefik:v3.0
    container_name: spoved-traefik
    command:
      - --configFile=/etc/traefik/traefik.yml
    ports:
      - 8080:8080
      - 8089:8089
    volumes:
      - ./traefik/traefik.yml:/etc/traefik/traefik.yml
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - spoved-network

  ticket:
    image: ghcr.io/aet-devops25/ticketing-service/ticket:latest
    build:
      context: ./ticket
      dockerfile: Dockerfile
      cache_from:
        - ghcr.io/aet-devops25/ticketing-service/ticket:latest
    environment:
      - SPRING_PROFILES_ACTIVE=${SPRING_PROFILES_ACTIVE}
      - SPRING_DATASOURCE_URL=jdbc:postgresql://database:${POSTGRES_PORT}/${POSTGRES_DB}
      - SPRING_DATASOURCE_USERNAME=${POSTGRES_USER}
      - SPRING_DATASOURCE_PASSWORD=${POSTGRES_PASSWORD}
      - USER_SERVICE_URL=http://user:${USER_PORT}/api/v1
      - MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE=health,info
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.ticket-svc.loadbalancer.server.port=${TICKET_PORT}"
      - "traefik.http.routers.ticket.rule=PathPrefix(`/api/v1/tickets`)"
      - "traefik.http.routers.ticket.entrypoints=web"
      - "traefik.http.routers.ticket.service=ticket-svc"
      - "traefik.http.routers.ticket.priority=100"
    depends_on:
      - database
      - user
    ports:
      - "${TICKET_PORT}:${TICKET_PORT}"
    networks:
      - spoved-network
    restart: unless-stopped

  user:
    image: ghcr.io/aet-devops25/user-service/user:latest
    build:
      context: ./user
      dockerfile: Dockerfile
      cache_from:
        - ghcr.io/aet-devops25/user-service/user:latest
    environment:
      - SPRING_PROFILES_ACTIVE=${SPRING_PROFILES_ACTIVE}
      - SPRING_DATASOURCE_URL=jdbc:postgresql://database:${POSTGRES_PORT}/${POSTGRES_DB}
      - SPRING_DATASOURCE_USERNAME=${POSTGRES_USER}
      - SPRING_DATASOURCE_PASSWORD=${POSTGRES_PASSWORD}
      - MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE=health,info
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.user-svc.loadbalancer.server.port=${USER_PORT}"
      - "traefik.http.routers.user.rule=PathPrefix(`/api/v1/users`)"
      - "traefik.http.routers.user.entrypoints=web"
      - "traefik.http.routers.user.service=user-svc"
      - "traefik.http.routers.user.priority=100"
    depends_on:
      - database
    ports:
      - "${USER_PORT}:${USER_PORT}"
    networks:
      - spoved-network
    restart: unless-stopped

  media:
    image: ghcr.io/aet-devops25/media-service/media:latest
    build:
      context: ./media
      dockerfile: Dockerfile
      cache_from:
        - ghcr.io/aet-devops25/media-service/media:latest
    environment:
      - SPRING_PROFILES_ACTIVE=${SPRING_PROFILES_ACTIVE}
      - SPRING_DATASOURCE_URL=jdbc:postgresql://database:${POSTGRES_PORT}/${POSTGRES_DB}
      - SPRING_DATASOURCE_USERNAME=${POSTGRES_USER}
      - SPRING_DATASOURCE_PASSWORD=${POSTGRES_PASSWORD}
      - MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE=health,info
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.media-svc.loadbalancer.server.port=${MEDIA_PORT}"
      - "traefik.http.routers.media.rule=PathPrefix(`/api/v1/media`)"
      - "traefik.http.routers.media.entrypoints=web"
      - "traefik.http.routers.media.service=media-svc"
      - "traefik.http.routers.media.priority=100"
    depends_on:
      - database
    ports:
      - "${MEDIA_PORT}:${MEDIA_PORT}"
    networks:
      - spoved-network
    restart: unless-stopped

  client:
    image: ghcr.io/aet-devops25/client-service/client:latest
    build:
      context: ./client/frontend
      dockerfile: Dockerfile
      args:
        VITE_TICKET_API_URL: http://${TRAEFIK_HOST}:${TRAEFIK_PORT}/api/v1
        VITE_USER_API_URL: http://${TRAEFIK_HOST}:${TRAEFIK_PORT}/api/v1
        VITE_MEDIA_API_URL: http://${TRAEFIK_HOST}:${TRAEFIK_PORT}/api/v1
        VITE_AUTH_API_URL: http://${TRAEFIK_HOST}:${TRAEFIK_PORT}
        VITE_GENAI_API_URL: http://${TRAEFIK_HOST}:${GENAI_PORT}
    environment:
      - VITE_TICKET_API_URL=http://${TRAEFIK_HOST}:${TRAEFIK_PORT}/api/v1
      - VITE_USER_API_URL=http://${TRAEFIK_HOST}:${TRAEFIK_PORT}/api/v1
      - VITE_MEDIA_API_URL=http://${TRAEFIK_HOST}:${TRAEFIK_PORT}/api/v1
      - VITE_AUTH_API_URL=http://${TRAEFIK_HOST}:${TRAEFIK_PORT}
      - VITE_GENAI_API_URL=http://${TRAEFIK_HOST}:${GENAI_PORT}
    expose:
      - "${CLIENT_PORT}"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.client.rule=PathPrefix(`/`) && !PathPrefix(`/api`) && !PathPrefix(`/auth`)"
      - "traefik.http.routers.client.entrypoints=web"
      - "traefik.http.routers.client.service=client-svc"
      - "traefik.http.routers.client.priority=100"
      - "traefik.http.services.client-svc.loadbalancer.server.port=${CLIENT_PORT}"
    depends_on:
      - traefik
      - ticket
      - user
      - media
      - auth
    networks:
      - spoved-network
    restart: unless-stopped

  database:
    image: team-spoved-db
    build:
      context: ./database
      dockerfile: Dockerfile
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    expose:
      - "${POSTGRES_PORT}"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - spoved-network
    restart: unless-stopped

  auth:
    image: auth-service
    build:
      context: ./auth
      dockerfile: Dockerfile
    environment:
      - SPRING_PROFILES_ACTIVE=${SPRING_PROFILES_ACTIVE}
      - SPRING_DATASOURCE_URL=jdbc:postgresql://database:${POSTGRES_PORT}/${POSTGRES_DB}
      - SPRING_DATASOURCE_USERNAME=${POSTGRES_USER}
      - SPRING_DATASOURCE_PASSWORD=${POSTGRES_PASSWORD}
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.auth-svc.loadbalancer.server.port=${AUTH_PORT}"
      - "traefik.http.routers.auth.rule=PathPrefix(`/auth`)"
      - "traefik.http.routers.auth.entrypoints=web"
      - "traefik.http.routers.auth.service=auth-svc"
      - "traefik.http.routers.auth.priority=100"
    depends_on:
      - database
    ports:
      - "${AUTH_PORT}:${AUTH_PORT}"
    networks:
      - spoved-network
    restart: unless-stopped

  genai:
    image: genai-service
    build:
      context: ./genai
      dockerfile: Dockerfile
      args:
        TICKET_API_URL: http://ticket:${TICKET_PORT}/api/v1
        USER_API_URL: http://user:${USER_PORT}/api/v1
        MEDIA_API_URL: http://media:${MEDIA_PORT}/api/v1
        AUTH_API_URL: http://auth:${AUTH_PORT}
        GEMINI_API_KEY: ${GEMINI_API_KEY}
    environment:
      - TICKET_API_URL=http://ticket:${TICKET_PORT}/api/v1
      - USER_API_URL=http://user:${USER_PORT}/api/v1
      - MEDIA_API_URL=http://media:${MEDIA_PORT}/api/v1
      - AUTH_API_URL=http://auth:${AUTH_PORT}
      - GEMINI_API_KEY=${GEMINI_API_KEY}
    depends_on:
      - traefik
      - ticket
      - user
      - media
    ports:
      - "${GENAI_PORT}:${GENAI_PORT}"
    networks:
      - spoved-network
    restart: unless-stopped

volumes:
  pgdata:

networks:
  spoved-network:
    driver: bridge
