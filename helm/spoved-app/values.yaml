namespace:
  name: 
  create: false

ticket:
  image:
    repository: ghcr.io/aet-devops25/team-spoved/ticket
    tag: latest
    pullPolicy: Always
  service:
    type: ClusterIP
    port: 8081
    targetPort: 8081
  replicaCount: 1
  resources:
    limits:
      cpu: "500m"
      memory: "256Mi"
    requests:
      cpu: "50m"
      memory: "50Mi"
    env:
    - name: SPRING_PROFILES_ACTIVE
      value: docker
    - name: SPRING_DATASOURCE_URL
      value: "jdbc:postgresql://database-service:5432/db"
    - name: SPRING_DATASOURCE_USERNAME
      valueFrom:
        secretKeyRef:
          name: db-credentials
          key: username
    - name: SPRING_DATASOURCE_PASSWORD
      valueFrom:
        secretKeyRef:
          name: db-credentials
          key: password
user:
  image:
    repository: ghcr.io/aet-devops25/team-spoved/user
    tag: latest
    pullPolicy: Always
  service:
    type: ClusterIP
    port: 8082
    targetPort: 8082
  replicaCount: 1
  resources:
    limits:
      cpu: "500m"
      memory: "256Mi"
    requests:
      cpu: "50m"
      memory: "50Mi"
    env:
    - name: SPRING_PROFILES_ACTIVE
      value: docker
    - name: SPRING_DATASOURCE_URL
      value: "jdbc:postgresql://database-service:5432/db"
    - name: SPRING_DATASOURCE_USERNAME
      valueFrom:
        secretKeyRef:
          name: db-credentials
          key: username
    - name: SPRING_DATASOURCE_PASSWORD
      valueFrom:
        secretKeyRef:
          name: db-credentials
          key: password

media:
  image:
    repository: ghcr.io/aet-devops25/team-spoved/media
    tag: latest
    pullPolicy: Always
  service:
    type: ClusterIP
    port: 8083
    targetPort: 8083
  replicaCount: 1
  resources:
    limits:
      cpu: "500m"
      memory: "256Mi"
    requests:
      cpu: "50m"
      memory: "50Mi"
    env:
    - name: SPRING_PROFILES_ACTIVE
      value: docker
    - name: SPRING_DATASOURCE_URL
      value: "jdbc:postgresql://database-service:5432/db"
    - name: SPRING_DATASOURCE_USERNAME
      valueFrom:
        secretKeyRef:
          name: db-credentials
          key: username
    - name: SPRING_DATASOURCE_PASSWORD
      valueFrom:
        secretKeyRef:
          name: db-credentials
          key: password

genai:
  image:
    repository: ghcr.io/aet-devops25/team-spoved/genai
    tag: latest
    pullPolicy: Always
  service:
    type: ClusterIP
    port: 8000
    targetPort: 8000
  replicaCount: 1
  resources:
    limits:
      cpu: "500m"
      memory: "256Mi"
    requests:
      cpu: "50m"
      memory: "50Mi"

auth:
  image:
    repository: ghcr.io/aet-devops25/team-spoved/auth
    tag: latest
    pullPolicy: Always
  service:
    type: ClusterIP
    port: 8030
    targetPort: 8030
  replicaCount: 1
  resources:
    limits:
      cpu: "500m"
      memory: "256Mi"
    requests:
      cpu: "50m"
      memory: "50Mi"
    env:
    - name: SPRING_PROFILES_ACTIVE
      value: docker
    - name: SPRING_DATASOURCE_URL
      value: "jdbc:postgresql://database-service:5432/db"
    - name: SPRING_DATASOURCE_USERNAME
      valueFrom:
        secretKeyRef:
          name: db-credentials
          key: username
    - name: SPRING_DATASOURCE_PASSWORD
      valueFrom:
        secretKeyRef:
          name: db-credentials
          key: password
client:
  image:
    repository: ghcr.io/aet-devops25/team-spoved/client
    tag: latest
    pullPolicy: Always
  service:
    type: ClusterIP
    port: 3000
    targetPort: 3000
  replicaCount: 1

database:
  image:
    repository: postgres
    tag: "15-alpine"
    pullPolicy: IfNotPresent
  service:
    name: database-service
    port: 5432
  storage:
    size: 128Mi
  resources:
    limits:
      cpu: "500m"
      memory: "512Mi"
    requests:
      cpu: "100m"
      memory: "256Mi"
  credentials:
    username: spoved
    password: secret

ingress:
  enabled: true
  className: "traefik"
  annotations:
    traefik.ingress.kubernetes.io/router.middlewares: web

  hosts:
    - host: team-spoved.devops25.student.k8s.aet.cit.tum.de
      paths:
        - path: /api/v1/tickets
          pathType: Prefix
          backend:
            service:
              name: ticket
              port:
                number: 8081

        - path: /api/v1/users
          pathType: Prefix
          backend:
            service:
              name: user
              port:
                number: 8082

        - path: /api/v1/media
          pathType: Prefix
          backend:
            service:
              name: media
              port:
                number: 8083
        
        - path: /auth 
          pathType: Prefix
          backend:
            service:
              name: auth
              port:
                number: 8030

        - path: /
          pathType: Prefix
          backend:
            service:
              name: client
              port:
                number: 3000
