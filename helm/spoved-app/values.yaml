namespace:
  name: spoved-2
  create: false

geminiApiKey: ""
dbUser: spoved
dbSecret: secret

ticket:
  image:
    repository: ghcr.io/aet-devops25/team-spoved/ticket
    tag: latest
    pullPolicy: Always # Change to 'Never' to try using a local image first. This is useful when building the Image with docker compose
  service:
    type: ClusterIP
    port: 8081
    targetPort: 8081
  replicaCount: 1
  resources:
    limits:
      cpu: "500m"
      memory: "256Mi"
    requests:
      cpu: "50m"
      memory: "50Mi"
    
user:
  image:
    repository: ghcr.io/aet-devops25/team-spoved/user
    tag: latest
    pullPolicy: Always # Change to 'Never' to try using a local image first. This is useful when building the Image with docker compose
  service:
    type: ClusterIP
    port: 8082
    targetPort: 8082
  replicaCount: 1
  resources:
    limits:
      cpu: "500m"
      memory: "256Mi"
    requests:
      cpu: "50m"
      memory: "50Mi"

media:
  image:
    repository: ghcr.io/aet-devops25/team-spoved/media
    tag: latest
    pullPolicy: Always # Change to 'Never' to try using a local image first. This is useful when building the Image with docker compose
  service:
    type: ClusterIP
    port: 8083
    targetPort: 8083
  replicaCount: 1
  resources:
    limits:
      cpu: "500m"
      memory: "256Mi"
    requests:
      cpu: "50m"
      memory: "50Mi"

genai:
  image:
    repository: ghcr.io/aet-devops25/team-spoved/genai
    tag: latest
    pullPolicy: Always # Change to 'Never' to try using a local image first. This is useful when building the Image with docker compose
  service:
    type: ClusterIP
    port: 8000
    targetPort: 8000
  replicaCount: 1
  resources:
    limits:
      cpu: "500m"
      memory: "256Mi"
    requests:
      cpu: "50m"
      memory: "50Mi"

auth:
  image:
    repository: ghcr.io/aet-devops25/team-spoved/auth
    tag: latest
    pullPolicy: Always # Change to 'Never' to try using a local image first. This is useful when building the Image with docker compose
  service:
    type: ClusterIP
    port: 8030
    targetPort: 8030
  replicaCount: 1
  resources:
    limits:
      cpu: "500m"
      memory: "256Mi"
    requests:
      cpu: "50m"
      memory: "50Mi"

client:
  image:
    repository: ghcr.io/aet-devops25/team-spoved/client
    tag: latest
    pullPolicy: Always # Change to 'Never' to try using a local image first. This is useful when building the Image with docker compose
  service:
    type: ClusterIP
    port: 3000
    targetPort: 3000
  replicaCount: 1

database:
  image:
    repository: postgres
    tag: "15-alpine"
    pullPolicy: IfNotPresent
  service:
    name: database
    port: 5432
  storage:
    size: 128Mi
  resources:
    limits:
      cpu: "500m"
      memory: "512Mi"
    requests:
      cpu: "100m"
      memory: "256Mi"

ingress:
  enabled: true
  className: "nginx"
  tls: true
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-prod"