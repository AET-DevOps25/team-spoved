namespace:
  name: 
  create: false

geminiApiKey: ""
db-user: spoved
db-secret: secret

ticket:
  image:
    repository: ghcr.io/aet-devops25/team-spoved/ticket
    tag: latest
    pullPolicy: Always
  service:
    type: ClusterIP
    port: 8081
    targetPort: 8081
  replicaCount: 1
  resources:
    limits:
      cpu: "500m"
      memory: "256Mi"
    requests:
      cpu: "50m"
      memory: "50Mi"
    env:
    - name: SPRING_PROFILES_ACTIVE
      value: docker
    - name: SPRING_DATASOURCE_URL
      value: "jdbc:postgresql://database-service:5432/db"
    - name: SPRING_DATASOURCE_USERNAME
      value: "{{ .Values.db-user }}"
    - name: SPRING_DATASOURCE_PASSWORD
      value: "{{.Values.db-password}}"
user:
  image:
    repository: ghcr.io/aet-devops25/team-spoved/user
    tag: latest
    pullPolicy: Always
  service:
    type: ClusterIP
    port: 8082
    targetPort: 8082
  replicaCount: 1
  resources:
    limits:
      cpu: "500m"
      memory: "256Mi"
    requests:
      cpu: "50m"
      memory: "50Mi"
    env:
    - name: SPRING_PROFILES_ACTIVE
      value: docker
    - name: SPRING_DATASOURCE_URL
      value: "jdbc:postgresql://database-service:5432/db"
    - name: SPRING_DATASOURCE_USERNAME
      value: "{{ .Values.db-user }}"
    - name: SPRING_DATASOURCE_PASSWORD
      value: "{{.Values.db-password}}"

media:
  image:
    repository: ghcr.io/aet-devops25/team-spoved/media
    tag: latest
    pullPolicy: Always
  service:
    type: ClusterIP
    port: 8083
    targetPort: 8083
  replicaCount: 1
  resources:
    limits:
      cpu: "500m"
      memory: "256Mi"
    requests:
      cpu: "50m"
      memory: "50Mi"
    env:
    - name: SPRING_PROFILES_ACTIVE
      value: docker
    - name: SPRING_DATASOURCE_URL
      value: "jdbc:postgresql://database-service:5432/db"
    - name: SPRING_DATASOURCE_USERNAME
      value: "{{ .Values.db-user }}"
    - name: SPRING_DATASOURCE_PASSWORD
      value: "{{.Values.db-password}}"

genai:
  image:
    repository: ghcr.io/aet-devops25/team-spoved/genai
    tag: latest
    pullPolicy: Always
  service:
    type: ClusterIP
    port: 8000
    targetPort: 8000
  replicaCount: 1
  resources:
    limits:
      cpu: "500m"
      memory: "256Mi"
    requests:
      cpu: "50m"
      memory: "50Mi"

auth:
  image:
    repository: ghcr.io/aet-devops25/team-spoved/auth
    tag: latest
    pullPolicy: Always
  service:
    type: ClusterIP
    port: 8030
    targetPort: 8030
  replicaCount: 1
  resources:
    limits:
      cpu: "500m"
      memory: "256Mi"
    requests:
      cpu: "50m"
      memory: "50Mi"
    env:
    - name: SPRING_PROFILES_ACTIVE
      value: docker
    - name: SPRING_DATASOURCE_URL
      value: "jdbc:postgresql://database-service:5432/db"
    - name: SPRING_DATASOURCE_USERNAME
      value: "{{ .Values.db-user }}"
    - name: SPRING_DATASOURCE_PASSWORD
      value: "{{.Values.db-password}}"

client:
  image:
    repository: ghcr.io/aet-devops25/team-spoved/client
    tag: latest
    pullPolicy: Always
  service:
    type: ClusterIP
    port: 3000
    targetPort: 3000
  replicaCount: 1

database:
  image:
    repository: postgres
    tag: "15-alpine"
    pullPolicy: IfNotPresent
  service:
    name: database-service
    port: 5432
  storage:
    size: 128Mi
  resources:
    limits:
      cpu: "500m"
      memory: "512Mi"
    requests:
      cpu: "100m"
      memory: "256Mi"
  credentials:
    username: spoved
    password: secret

ingress:
  enabled: true
  className: "nginx"
  tls: true
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-prod"