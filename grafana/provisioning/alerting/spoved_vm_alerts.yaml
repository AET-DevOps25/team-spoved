apiVersion: 1

groups:
  - orgId: 1
    name: spOveD_VM_alerts
    folder: "spOveD Alerts"
    interval: 60s

    rules:
      - uid: vm_high_usage
        title: VM Memory > 80%
        condition: A
        data:
          - refId: A
            datasourceUid: prom
            queryType: instant
            relativeTimeRange:
              from: 300
              to:   0
            model:
              type: query
              datasource:
                type: prometheus
                uid: prom
              expr: |
                (
                  sum(process_virtual_memory_bytes) by (instance)
                  /
                  sum(node_memory_MemTotal_bytes) by (instance)
                )
                * 100 > 80
              intervalMs: 1000
              maxDataPoints: 43200

        for: 5m
        labels:
          severity: critical
        annotations:
          summary: High VM memory on {{ $labels.instance }}

      - uid: service_startup_slow
        title: Service Startup > 30s
        condition: A > 30                 # seconds
        data:
          - refId: A
            datasourceUid: prom
            queryType: instant
            relativeTimeRange:
              from: 300
              to:   0
            model:
              type: query
              datasource:
                type: prometheus
                uid: prom
              # replace `my_service_startup_seconds` with your actual metric
              expr: |
                max by (service) (my_service_startup_seconds)
              intervalMs: 1000
              maxDataPoints: 43200
        for: 5m
        labels:
          severity: warning
          service: "{{ $labels.service }}"
        annotations:
          summary: "Slow startup: {{ $labels.service }} took >30s"

      # ── 2) HTTP Request Duration (95th pct) > 2s ────
      - uid: service_http_slow
        title: Service HTTP 95th-pct > 2s
        condition: A > 2                  # seconds
        data:
          - refId: A
            datasourceUid: prom
            queryType: instant
            relativeTimeRange:
              from: 300
              to:   0
            model:
              type: query
              datasource:
                type: prometheus
                uid: prom
              # replace `http_request_duration_seconds_bucket` & label names as needed
              expr: |
                histogram_quantile(
                  0.95,
                  sum by (le,service) (
                    rate(http_request_duration_seconds_bucket[5m])
                  )
                )
              intervalMs: 1000
              maxDataPoints: 43200
        for: 5m
        labels:
          severity: critical
          service: "{{ $labels.service }}"
        annotations:
          summary: "Slow HTTP: 95th-pct request for {{ $labels.service }} >2s"

